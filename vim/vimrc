set nocompatible              " be iMproved, required
filetype off                  " required

" use this to setup vundle: git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" " plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" " Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" " git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" " The sparkup vim script is in a subdirectory of this repo called vim.
" " Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" " Install L9 and avoid a Naming conflict if you've already installed a
" " different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'jceb/vim-orgmode'
Plugin 'cormacrelf/vim-colors-github'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"set nowrap
set background=dark
set backspace=indent,eol,start
set cindent
set guioptions=agit
set hidden
set hlsearch
set colorcolumn=80
set errorformat&
set ff=unix
set ignorecase
set incsearch
set langmap=ч`,ю\\\\,ш[,щ],яq,вw,еe,рr,тt,ъy,уu,иi,оo,пp,аa,сs,дd,фf,гg,хh,йj,кk,лl,зz,ьx,цc,жv,бb,нn,мm,Ч~,Ю\|,Ш{,Щ},ЯQ,ВW,ЕE,РR,ТT,ЪY,УU,ИI,ОO,ПP,АA,СS,ДD,ФF,ГG,ХH,ЙJ,КK,ЛL,ЗZ,ЬX,ЦC,ЖV,БB,НN,МM
set laststatus=2
set linespace=3
set mouse=
set mousehide
set number
"set nonumber
set novisualbell
set ruler
set shiftwidth=4
set smartcase
set t_vb=
set tabstop=4
"ignore case for buffer/file names
set wildignorecase

"disable autocommenting on new line
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
"disable visual bell
autocmd GUIEnter * set vb t_vb=
"colorscheme default
"colorscheme desert
colorscheme github
"syntax off
syntax on

let g:airline_powerline_fonts = 1
let g:airline_theme='badwolf' "cant be seen in desert vim theme
"let g:airline_theme='aurora'

let s:hostname = substitute(system("hostname"), "\n", "", "")
let s:osname = substitute(system("uname -o"), "\n", "", "")
let s:haveReadSession = 0

"let s:user = "ivaila"
"let s:user = "stoiko"

let s:projectName = $ZPROJ

if s:projectName == "zhost"
    set expandtab
    let s:homeDir = "~/work/github/zhost"
    let s:appToRun = "zhost_dbg"
    let s:ctagsDirs = ""
elseif s:projectName == "bms"
    set expandtab
    let s:homeDir = "~/work/BMS/BMS_PIC24FJ256GA704.X"
    let s:appToRun = "xxx"
    let s:ctagsDirs = ""
elseif s:projectName == "intellics"
    set noexpandtab
    let s:homeDir = "~/work/DoorsNG"
    let s:appToRun = "xxx"
    let s:ctagsDirs = ""
elseif s:projectName == "bgg"
    set expandtab
    let s:homeDir = "~/work/github/bgg"
    let s:appToRun = "bgg_dbg"
    let s:ctagsDirs = "../zhost"
elseif s:projectName == "tetris"
    set expandtab
    let s:homeDir = "~/work/github/tetris"
    let s:appToRun = "tetris_dbg"
    let s:ctagsDirs = "../zhost"
elseif s:projectName == "bare_doom"
    set expandtab
    let s:homeDir = "~/work/github/bare_doom"
    let s:appToRun = "bd_dbg"
    let s:ctagsDirs = "../zhost"
elseif s:projectName == "zps2"
    set expandtab
    let s:homeDir = "~/work/github/zps2"
    let s:ctagsDirs = "../zhost"
elseif s:projectName == "brickslam"
    set expandtab
    let s:homeDir = "~/work/github/brickslam"
    let s:ctagsDirs = "../zhost"
    let s:appToRun = "brickslam_dbg"
elseif s:projectName == "visteon_sim"
    set expandtab
    let s:homeDir = "~/work/visteon/simulator"
    "let s:homeDir = "~/work/visteon/gs_redesign/fpk10_simulator/"
    let s:ctagsDirs = ""
elseif s:projectName == "visteon"
    set expandtab
    "let s:homeDir = "~/work/visteon/tools/Demos/MP22_MQBAB_IC_Basic8__CW105"
    let s:homeDir = "~/work/visteon/tools/Demos/MP22_MQBAB_IC_Basic8__CW105/programs/vw/my2022/fpkb8/vp-apps/gs"
    let s:ctagsDirs = ""
elseif s:projectName == "visteon_platform"
    set expandtab
    let s:homeDir = "~/work/visteon/platform_v8.3"
    let s:ctagsDirs = ""
elseif s:projectName == "visteon_demo"
    set expandtab
    "let s:homeDir = "~/work/visteon/MP22_FPK_Basic8"
    let s:homeDir = "~/work/visteon/fpk8_demo"
    let s:ctagsDirs = ""
elseif s:projectName == "zpsx"
    set expandtab
    let s:homeDir = "~/work/github/zpsx"
    let s:ctagsDirs = ""
    let s:appToRun = "zpsx_dbg"
    set textwidth=80
    set colorcolumn=+1        " highlight column after 'textwidth'
    "set colorcolumn=+1,+2,+3  " highlight three columns after 'textwidth'
    highlight ColorColumn ctermbg=lightgrey guibg=black
elseif s:projectName == "vreck2d"
    set expandtab
    let s:homeDir = "~/work/github/vreck2d"
    let s:ctagsDirs = ""
    let s:appToRun = "vreck2d"
elseif s:projectName == "vrexel"
    set expandtab
    let s:homeDir = "~/work/github/vrexel"
    let s:ctagsDirs = ""
    let s:appToRun = "vrexel"
elseif s:projectName == "celofanche"
    set expandtab
    let s:homeDir = "~/work/github/celofanche"
    let s:ctagsDirs = ""
    let s:appToRun = "celofanche"
    set colorcolumn=80
elseif s:projectName == "raypunk"
    set expandtab
    let s:homeDir = "~/work/github/raypunk/Code"
    let s:ctagsDirs = ""
    let s:appToRun = "raypunk"
elseif s:projectName == "qonche"
    set expandtab
    let s:homeDir = "~/work/github/qonche"
    let s:ctagsDirs = ""
    let s:appToRun = "qonche"
    set colorcolumn=80
elseif s:projectName == "zs"
    set expandtab
    let s:homeDir = "~/work/github/zhost_scratch"
    let s:ctagsDirs = "../zhost"
    let s:appToRun = "zs_dbg"
elseif s:projectName == "zcom" || s:projectName == "zcom_rc"
    set noexpandtab
    set errorformat=\ %#%f(%l\\\,%c):\ %m
    " use quotes
    let s:ctagsDirs = "\"../../NativePlugins/NativeSnapShot/unity_dlls\" \"../../NativePlugins/NativeSnapShot/libs/level5/tacticalmap\" \"../Shaders\" \"../Extensions/Boxify\" \"../Users/Stoiko/code\""
    let s:additionalSVNDirs = s:ctagsDirs
elseif s:projectName == "boxify"
    set noexpandtab
    set errorformat=\ %#%f(%l\\\,%c):\ %m
    "let s:ctagsDirs = "."
    let s:additionalSVNDirs = ""
elseif s:projectName == "chaos_client" 
    set colorcolumn=100
    set noexpandtab
    set errorformat=\ %#%f(%l\\\,%c):\ %m
    " use quotes
    let s:additionalSVNDirs = "\"../Scenes\" \"../Resources_Raw\" \"../Resources\""
elseif s:projectName == "chaos_server"
    set noexpandtab
    set errorformat=\ %#%f(%l\\\,%c):\ %m
    let s:additionalSVNDirs = " \"../ChaosUnity/Assets/Scripts\" \
                            \"../ChaosUnity/Assets/Editor/Build\" "
else
    let s:additionalSVNDirs = ""
    set expandtab
endif

if s:osname == "Cygwin"
    let s:isWindows=1
else 
    let s:isWindows=0
endif

if s:hostname == "monster"
    set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
    "set guifont=Droid\ Sans\ Mono\ 9
    "set guifont=Inconsolata\ 8 
elseif s:hostname == "acer-laptop"
    set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 17
elseif s:hostname == "DESKTOP-TD3AU4V"
    set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
elseif s:hostname == "DESKTOP-JUGNII1"
    set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
elseif s:hostname == "laptop"
    set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 11
    "set guifont=Inconsolata\ 9 
elseif s:hostname == "Phoenix"
    "set guifont=Lucida\ Console\ Semi-Condensed\ 10
    set guifont=Inconsolata\ Medium\ 10
    "set lines=90
elseif s:hostname == "SNAPSHOT-STOIKO"
    "set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ Medium\ 10
    set t_md=
    set guifont=Inconsolata\ Medium\ 10
    "set guifont=Inconsolata\ for\ Powerline\ Medium\ 11
    "set guifont=Ubuntu\ Mono\ derivative\ Powerline\ Medium\ 11
    "set guifont=Meslo\ LG\ L\ DZ\ for\ Powerline\ 10
    "set vb 
elseif s:hostname == "monster-win"
    "set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 8
    "set guifont=Inconsolata\ Medium\ 11
    set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
else
    set guifont=Droid\ Sans\ Mono\ 9
endif

function! Build_f( ... )
    if ! s:isWindows
        execute "!killall xterm" 
    endif

    wall

    execute "cd " . a:1
    if ! s:haveReadSession
        execute "source vim_session" . "_" . s:projectName
        let s:haveReadSession = 1
    endif

    if s:projectName == "bms_doors" || s:projectName == "bms"
        execute "make -f " . a:2 . "/cygwin/Makefile-cygwin"
    elseif a:0 == 2
        execute "make -f " . a:2 . "/Makefile "
    elseif a:0 == 3
        execute "make -f " . a:2 . "/Makefile " . a:3
    elseif a:0 == 4
        execute "make -f " . a:2 . "/Makefile " . a:3 . " " . a:4
    endif

    if s:projectName == "chaos_client"
        execute "!ctags -R " . a:2
    elseif s:projectName == "chaos_server"
        execute "!ctags -R " . a:2 . s:additionalSVNDirs
"    elseif s:projectName == "pcsx2"
"        execute "!ctags -R " . a:2 . "/" . " " . s:additionalSVNDirs
    elseif s:projectName == "visteon" || s:projectName == "visteon_sim" || s:projectName == "visteon_platform" || s:projectName == "visteon_demo"
    elseif s:projectName != ""
        execute "!ctags -R \"" . a:2 . "/\"" . " " . s:ctagsDirs
    else 
        execute "!ctags -R " . a:2 . " " . "engine"
    endif

    execute "mksession! vim_session" . "_" . s:projectName
endfunction

function! Run_f( ... )
    call Build_f( a:1, a:2, a:3 )

    let pathToExe = a:1 . "/" . a:2 . "/" . a:3

    if s:isWindows
        execute "!" . pathToExe . ".exe&"
    else
        execute "!killall xterm ; xterm -e \"" . pathToExe . "\"&"
    endif

endfunction

function! FindInFiles_f( ... )
    let cmdPref = "grep -riIFe \""
    let cmdSuf = " --exclude-dir=*{.git,.svn,doxygen} --exclude=*{Makefile,tags,vim_session*} --exclude=*.{csproj,config,xml,html,mk,o,d,map,tst,txt} --include=*.{c,cs,cpp,h,lua,cmake}" 
    if a:0 == 1 
        execute cmdPref . a:1 . "\" . " . s:ctagsDirs . cmdSuf
    elseif a:0 == 2 
        execute cmdPref . a:1 . "\" \"" . a:2 . "\" " . cmdSuf
    elseif a:0 == 3 
        execute cmdPref . a:1 . "\" " . a:2 . " " . a:3 . " " . cmdSuf
    elseif a:0 == 4 
        execute cmdPref . a:1 . "\" \"" . a:2 . "\" \"" . a:3 . "\" \"" . a:4 . "\" " . cmdSuf
    elseif a:0 == 5 
        execute cmdPref . a:1 . "\" \"" . a:2 . "\" \"" . a:3 . "\" \"" . a:4 . "\" \"" . a:5 . "\" " . cmdSuf
    elseif a:0 == 6 
        execute cmdPref . a:1 . "\" \"" . a:2 . "\" \"" . a:3 . "\" \"" . a:4 . "\" \"" . a:5 . "\" \"" . a:6 . "\" " . cmdSuf
    elseif a:0 == 7 
        execute cmdPref . a:1 . "\" \"" . a:2 . "\" \"" . a:3 . "\" \"" . a:4 . "\" \"" . a:5 . "\" \"" . a:6 . "\" \"" . a:7 . "\" " . cmdSuf
    else
        echo "Num of args not supported"
    endif
endfunction

function! SvnBlame()
   let line = line(".")
   setlocal nowrap
   " blame, ignoring white space changes
   !/bin/svn blame "%" -x-w "%" > /tmp/SVNblame_vim
   18 vsplit! /tmp/SVNblame_vim
   e /tmp/SVNblame_vim
   setlocal nomodified nowrap winwidth=1
   setlocal nonumber
   if has('&relativenumber') | setlocal norelativenumber | endif
   " return to original line
   exec "normal " . line . "G"
   " synchronize scrolling, and return to original window
   setlocal scrollbind
   wincmd p
   setlocal scrollbind
   syncbind
endfunction

function! SvnBlameOff()
   bd /tmp/SVNblame_vim
   setlocal noscrollbind
   setlocal wrap
endfunction

command! -nargs=+ FindInFiles call FindInFiles_f( <q-args>, "." )

if 0
    command! -nargs=0 Build call Build_f( "~/work/necropolis", "maria/eduworld" )
    map <F5> :Run "~/work/necropolis/maria/eduworld/eduworld_dbg" <CR>
elseif 0
    command! -nargs=0 Build call Build_f( "~/work/private", "imgui" )
    command! -nargs=0 Clean execute "!make -f ~/work/private/imgui/Makefile clean"
    command! -nargs=+ FindInFiles execute "grep -riIF -e \"" . <q-args> . "\" \"imgui\" \"engine\" --exclude-dir=.svn --exclude=tags" 
    map <F5> :Run "$HOME/work/private/imgui/imgui_dbg" <CR>
elseif s:projectName == "grid_fov"
    command! -nargs=0 Build call Build_f( "~/work/private", "grid_fov" )
    command! -nargs=0 Run call Run_f( "~/work/private", "grid_fov", "grid_fov_dbg" )
    command! -nargs=0 Clean execute "!make -f ~/work/private/grid_fov/Makefile clean"
    command! -nargs=+ FindInFiles execute "grep -riIF -e \"" . <q-args> . "\" \"grid_fov\" \"engine\" --exclude-dir=.svn --exclude=tags" 
elseif s:projectName == "laser_chess"
    command! -nargs=0 Build call Build_f( "~/work/private", "laser_chess" )
    command! -nargs=0 Run call Run_f( "~/work/private", "laser_chess", "laser_chess_dbg" )
    command! -nargs=0 Clean execute "!make -f ~/work/private/laser_chess/Makefile clean"
    command! -nargs=+ FindInFiles execute "grep -riIF -e \"" . <q-args> . "\" \"laser_chess\" \"engine\" --exclude-dir=.svn --exclude=tags" 
elseif s:projectName == "bms"
    command! -nargs=0 Build call Build_f( "~/work/BMS/BMS_PIC24FJ256GA704.X", "." )
elseif s:projectName == "bms_doors"
    command! -nargs=0 Build call Build_f( "~/work/BMSDoorPanels", "." )
"elseif 0
"    command! -nargs=0 Build call Build_f( "~/work/private", "necropolis" )
"    command! -nargs=0 Run call Run_f( "~/work/private", "necropolis", "necropolis_dbg" )
"    command! -nargs=0 Clean execute "!make -f ~/work/private/necropolis/Makefile clean"
"    command! -nargs=+ FindInFiles execute "grep -riIF -e \"" . <q-args> . "\" \"necropolis\" \"engine\" --exclude-dir=.svn --exclude=tags" 
"elseif 0
"    command! -nargs=0 Build call Build_f( "~/work/private", "ai_demo" )
"    command! -nargs=0 Clean execute "!make -f ~/work/private/ai_demo/Makefile clean"
"    command! -nargs=+ FindInFiles execute "grep -riIF -e \"" . <q-args> . "\" \"necropolis\" \"engine\" \"ai_demo\" --exclude-dir=.svn --exclude=tags" 
"    map <F5> :Run "$HOME/work/private/ai_demo/ai_demo_dbg" <CR>
"elseif 1
"   command! -nargs=0 Build call Build_f( "~/work/private", "toonfx" )
"   command! -nargs=0 Clean execute "!make -f ~/work/private/toonfx/Makefile clean"
"   command! -nargs=+ FindInFiles execute "grep -riIF -e \"" . <q-args> . "\" \"necropolis\" \"engine\" \"ai_demo\" --exclude-dir=.svn --exclude=tags" 
"   map <F5> :Run "$HOME/work/private/toonfx/toonfx_dbg" <CR>
"elseif 0
"    command! -nargs=0 Build call Build_f( "~/work/playvpx", "." )
"    map <F5> :Run "~/work/playvpx/playvpx" <CR>
"elseif 0
"    command! -nargs=0 Build call Build_f( "~/work/ioquake3", "." )
"    map <F5> :Run "~/work/ioquake3/build/release-linux-i386/ioquake3.i386" <CR>
"elseif s:projectName == "zcom"
"    if s:hostname == "monster-win" || s:hostname == "SNAPSHOT-STOIKO"
"        command! -nargs=0 Build call Build_f( "~/work/snapshot/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Code",
"                    \ "/home/stoiko/work/snapshot/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Users/Stoiko/code", 
"                    \ "PATH_TO_SCRIPT=\"~/work/snapshot/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Users/Stoiko/code/cygwin_compile.sh\"",
"                    \ "PATH_TO_MSBUILD=\"/cygdrive/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe\"")
"    elseif s:hostname == "monster"
"        command! -nargs=0 Build call Build_f( "/home/stoiko/work/chaos/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Code", "." )
"    endif
"    command! -nargs=+ FindInFiles call FindInFiles_f( <q-args> )
"elseif s:projectName == "zcom_rc"
"    if s:hostname == "monster-win" || s:hostname == "SNAPSHOT-STOIKO"
"        command! -nargs=0 Build call Build_f( "/cygdrive/d/PhoenixPointUnityRC/Assets/Code",
"                    \ "/cygdrive/d/PhoenixPointUnityRC/Assets/Users/Stoiko/code", 
"                    \ "PATH_TO_SCRIPT=\"/cygdrive/d/PhoenixPointUnityRC/Assets/Users/Stoiko/code/cygwin_compile.sh\"",
"                    \ "PATH_TO_MSBUILD=\"/cygdrive/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe\"")
"    elseif s:hostname == "monster"
"        command! -nargs=0 Build call Build_f( "/home/stoiko/work/chaos/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Code", "." )
"    endif
"    command! -nargs=+ FindInFiles call FindInFiles_f( <q-args> )
elseif s:projectName == "boxify"
    if s:hostname == "monster-win" || s:hostname == "SNAPSHOT-STOIKO"
        command! -nargs=0 Build call Build_f( "~/work/boxify/Assets/Scripts",
                    \ ".", 
                    \ "PATH_TO_SCRIPT=\"~/work/snapshot/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Users/Stoiko/code/cygwin_compile.sh\"",
                    \ "PATH_TO_MSBUILD=\"/cygdrive/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2017/BuildTools/MSBuild/15.0/Bin/MSBuild.exe\"")
    elseif s:hostname == "monster"
        command! -nargs=0 Build call Build_f( "/home/stoiko/work/chaos/trunk/PhoenixPoint/Unity/PhoenixPointUnity/Assets/Code", "." )
    endif
    command! -nargs=+ FindInFiles call FindInFiles_f( <q-args> )
"elseif s:projectName == "pcsx2"
"    if s:hostname == "SNAPSHOT-STOIKO"
"        command! -nargs=0 Build call Build_f( "/tmp/pcsx2", "." )
"    else
"        command! -nargs=0 Build call Build_f( "~/work/pcsx2-master", "." )
"    endif
elseif s:projectName == "chaos_client"
    if s:hostname == "SNAPSHOT-STOIKO"
        command! -nargs=0 Build call Build_f( "/cygdrive/c/gallium/ChaosUnity/Assets/Scripts", "." )
    elseif s:hostname == "monster-win"
        command! -nargs=0 Build call Build_f( "/cygdrive/c/chaos/trunk/ChaosReborn/ChaosUnity/Assets/Scripts", "." )
    endif
"elseif s:projectName == "chaos_server"
"    if s:hostname == "monster-win"
"        command! -nargs=0 Build call Build_f( "/cygdrive/c/chaos/trunk/ChaosReborn/ChaosServer", "." )
"    else
"        command! -nargs=0 Build call Build_f( "/cygdrive/e/chaos/trunk/ChaosReborn/ChaosServer", "." )
"    endif
"    command! -nargs=+ FindInFiles call FindInFiles_f( <q-args> )
elseif s:projectName != ""
    command! -nargs=0 Build call Build_f( s:homeDir, "." )
    command! -nargs=0 Run call Run_f( s:homeDir, ".", s:appToRun )
    command! -nargs=+ FindInFiles call FindInFiles_f( <q-args>, ".", s:ctagsDirs )
else
    command! Build echo "Build: did you specify $ZPROJ? If yes, enable the build configuration for '" . s:projectName . "' in vimrc first"
endif

command! -nargs=0 SVNdiffoff        execute "bd /tmp/" . expand("%:t") | diffoff!
command! -nargs=0 SVNdiff           diffoff! | execute "!/bin/svn export --force \"%\" /tmp/%:t -r COMMITTED" | vert diffsplit /tmp/%:t | wincmd x | goto
command! -nargs=0 SVNprev           diffoff! | execute "!/bin/svn export --force \"%\" /tmp/%:t -r PREV" | vert diffsplit /tmp/%:t | wincmd x | goto
command! -nargs=0 SVNstatus         e /tmp/SVNstatus_vim | bd /tmp/SVNstatus_vim | execute "!/bin/svn status $(ls) " . s:additionalSVNDirs . " | sort | grep -ve ^[?I] -ve \.mat > /tmp/SVNstatus_vim" | 10split | e /tmp/SVNstatus_vim | wincmd w
command! -nargs=0 SVNstatusx        e /tmp/SVNstatus_vim | bd /tmp/SVNstatus_vim | execute "!/bin/svn status $(ls) " . s:additionalSVNDirs . " | sort | grep -ve ^[?I] -ve \.mat > /tmp/SVNstatus_vim" | 10split | e /tmp/SVNstatus_vim | wincmd w
command! -nargs=+ SVNcommitMulti    execute "!/bin/svn commit --targets /tmp/SVNstatus_vim -m \"" . <q-args> . "\"" | SVNdiffoff 
command! -nargs=+ SVNcommit         execute "!/bin/svn commit \"%\" -m \"" . <q-args> . "\"" | SVNdiffoff
command! -nargs=0 SVNblame          call SvnBlame()
command! -nargs=0 SVNblameoff       call SvnBlameOff()

command! -nargs=+ ReplaceCwordInFile execute "%s/" . expand( "<cword>" ) . "/" . <q-args> . "/g"
command! -nargs=0 Date              execute ".!date +\"\\%A \\%B \\%d \\%Y\""
command! -nargs=0 Hour              execute ".!date +\\%R" | startinsert! 

map <F3>   :FindInFiles 
map <C-F3> :ReplaceCwordInFile 
map <F8>   :Build<CR>
map <F5>   :Run<CR>
":map gb :call <SID>svnBlame()<CR>

runtime ftplugin/man.vim 

